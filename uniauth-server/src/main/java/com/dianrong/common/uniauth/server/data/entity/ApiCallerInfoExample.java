package com.dianrong.common.uniauth.server.data.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ApiCallerInfoExample {

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  protected String orderByClause;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  protected boolean distinct;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public ApiCallerInfoExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  protected abstract static class GeneratedCriteria {

    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andIdIsNull() {
      addCriterion("id is null");
      return (Criteria) this;
    }

    public Criteria andIdIsNotNull() {
      addCriterion("id is not null");
      return (Criteria) this;
    }

    public Criteria andIdEqualTo(Integer value) {
      addCriterion("id =", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotEqualTo(Integer value) {
      addCriterion("id <>", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThan(Integer value) {
      addCriterion("id >", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("id >=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThan(Integer value) {
      addCriterion("id <", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdLessThanOrEqualTo(Integer value) {
      addCriterion("id <=", value, "id");
      return (Criteria) this;
    }

    public Criteria andIdIn(List<Integer> values) {
      addCriterion("id in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotIn(List<Integer> values) {
      addCriterion("id not in", values, "id");
      return (Criteria) this;
    }

    public Criteria andIdBetween(Integer value1, Integer value2) {
      addCriterion("id between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andIdNotBetween(Integer value1, Integer value2) {
      addCriterion("id not between", value1, value2, "id");
      return (Criteria) this;
    }

    public Criteria andDomainIdIsNull() {
      addCriterion("domain_id is null");
      return (Criteria) this;
    }

    public Criteria andDomainIdIsNotNull() {
      addCriterion("domain_id is not null");
      return (Criteria) this;
    }

    public Criteria andDomainIdEqualTo(Integer value) {
      addCriterion("domain_id =", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdNotEqualTo(Integer value) {
      addCriterion("domain_id <>", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdGreaterThan(Integer value) {
      addCriterion("domain_id >", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("domain_id >=", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdLessThan(Integer value) {
      addCriterion("domain_id <", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdLessThanOrEqualTo(Integer value) {
      addCriterion("domain_id <=", value, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdIn(List<Integer> values) {
      addCriterion("domain_id in", values, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdNotIn(List<Integer> values) {
      addCriterion("domain_id not in", values, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdBetween(Integer value1, Integer value2) {
      addCriterion("domain_id between", value1, value2, "domainId");
      return (Criteria) this;
    }

    public Criteria andDomainIdNotBetween(Integer value1, Integer value2) {
      addCriterion("domain_id not between", value1, value2, "domainId");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNull() {
      addCriterion("password is null");
      return (Criteria) this;
    }

    public Criteria andPasswordIsNotNull() {
      addCriterion("password is not null");
      return (Criteria) this;
    }

    public Criteria andPasswordEqualTo(String value) {
      addCriterion("password =", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotEqualTo(String value) {
      addCriterion("password <>", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThan(String value) {
      addCriterion("password >", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordGreaterThanOrEqualTo(String value) {
      addCriterion("password >=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThan(String value) {
      addCriterion("password <", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLessThanOrEqualTo(String value) {
      addCriterion("password <=", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordLike(String value) {
      addCriterion("password like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotLike(String value) {
      addCriterion("password not like", value, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordIn(List<String> values) {
      addCriterion("password in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotIn(List<String> values) {
      addCriterion("password not in", values, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordBetween(String value1, String value2) {
      addCriterion("password between", value1, value2, "password");
      return (Criteria) this;
    }

    public Criteria andPasswordNotBetween(String value1, String value2) {
      addCriterion("password not between", value1, value2, "password");
      return (Criteria) this;
    }

    public Criteria andStatusIsNull() {
      addCriterion("status is null");
      return (Criteria) this;
    }

    public Criteria andStatusIsNotNull() {
      addCriterion("status is not null");
      return (Criteria) this;
    }

    public Criteria andStatusEqualTo(Byte value) {
      addCriterion("status =", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusNotEqualTo(Byte value) {
      addCriterion("status <>", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusGreaterThan(Byte value) {
      addCriterion("status >", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusGreaterThanOrEqualTo(Byte value) {
      addCriterion("status >=", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusLessThan(Byte value) {
      addCriterion("status <", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusLessThanOrEqualTo(Byte value) {
      addCriterion("status <=", value, "status");
      return (Criteria) this;
    }

    public Criteria andStatusIn(List<Byte> values) {
      addCriterion("status in", values, "status");
      return (Criteria) this;
    }

    public Criteria andStatusNotIn(List<Byte> values) {
      addCriterion("status not in", values, "status");
      return (Criteria) this;
    }

    public Criteria andStatusBetween(Byte value1, Byte value2) {
      addCriterion("status between", value1, value2, "status");
      return (Criteria) this;
    }

    public Criteria andStatusNotBetween(Byte value1, Byte value2) {
      addCriterion("status not between", value1, value2, "status");
      return (Criteria) this;
    }

    public Criteria andCreateDateIsNull() {
      addCriterion("create_date is null");
      return (Criteria) this;
    }

    public Criteria andCreateDateIsNotNull() {
      addCriterion("create_date is not null");
      return (Criteria) this;
    }

    public Criteria andCreateDateEqualTo(Date value) {
      addCriterion("create_date =", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateNotEqualTo(Date value) {
      addCriterion("create_date <>", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateGreaterThan(Date value) {
      addCriterion("create_date >", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
      addCriterion("create_date >=", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateLessThan(Date value) {
      addCriterion("create_date <", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateLessThanOrEqualTo(Date value) {
      addCriterion("create_date <=", value, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateIn(List<Date> values) {
      addCriterion("create_date in", values, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateNotIn(List<Date> values) {
      addCriterion("create_date not in", values, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateBetween(Date value1, Date value2) {
      addCriterion("create_date between", value1, value2, "createDate");
      return (Criteria) this;
    }

    public Criteria andCreateDateNotBetween(Date value1, Date value2) {
      addCriterion("create_date not between", value1, value2, "createDate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateIsNull() {
      addCriterion("last_update is null");
      return (Criteria) this;
    }

    public Criteria andLastUpdateIsNotNull() {
      addCriterion("last_update is not null");
      return (Criteria) this;
    }

    public Criteria andLastUpdateEqualTo(Date value) {
      addCriterion("last_update =", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateNotEqualTo(Date value) {
      addCriterion("last_update <>", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateGreaterThan(Date value) {
      addCriterion("last_update >", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateGreaterThanOrEqualTo(Date value) {
      addCriterion("last_update >=", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateLessThan(Date value) {
      addCriterion("last_update <", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateLessThanOrEqualTo(Date value) {
      addCriterion("last_update <=", value, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateIn(List<Date> values) {
      addCriterion("last_update in", values, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateNotIn(List<Date> values) {
      addCriterion("last_update not in", values, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateBetween(Date value1, Date value2) {
      addCriterion("last_update between", value1, value2, "lastUpdate");
      return (Criteria) this;
    }

    public Criteria andLastUpdateNotBetween(Date value1, Date value2) {
      addCriterion("last_update not between", value1, value2, "lastUpdate");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated do_not_delete_during_merge Mon Jan 23 17:45:27 CST 2017
   */
  public static class Criteria extends GeneratedCriteria {

    protected Criteria() {
      super();
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * api_caller_info
   *
   * @mbggenerated Mon Jan 23 17:45:27 CST 2017
   */
  public static class Criterion {

    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}
