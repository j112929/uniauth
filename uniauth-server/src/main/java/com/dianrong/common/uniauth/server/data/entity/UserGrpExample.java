package com.dianrong.common.uniauth.server.data.entity;

import java.util.ArrayList;
import java.util.List;

public class UserGrpExample {

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  protected String orderByClause;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  protected boolean distinct;

  /**
   * This field was generated by MyBatis Generator. This field corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  protected List<Criteria> oredCriteria;

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public UserGrpExample() {
    oredCriteria = new ArrayList<Criteria>();
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public void setOrderByClause(String orderByClause) {
    this.orderByClause = orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public String getOrderByClause() {
    return orderByClause;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public void setDistinct(boolean distinct) {
    this.distinct = distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public boolean isDistinct() {
    return distinct;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public List<Criteria> getOredCriteria() {
    return oredCriteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public void or(Criteria criteria) {
    oredCriteria.add(criteria);
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public Criteria or() {
    Criteria criteria = createCriteriaInternal();
    oredCriteria.add(criteria);
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public Criteria createCriteria() {
    Criteria criteria = createCriteriaInternal();
    if (oredCriteria.size() == 0) {
      oredCriteria.add(criteria);
    }
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  protected Criteria createCriteriaInternal() {
    Criteria criteria = new Criteria();
    return criteria;
  }

  /**
   * This method was generated by MyBatis Generator. This method corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public void clear() {
    oredCriteria.clear();
    orderByClause = null;
    distinct = false;
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  protected abstract static class GeneratedCriteria {

    protected List<Criterion> criteria;

    protected GeneratedCriteria() {
      super();
      criteria = new ArrayList<Criterion>();
    }

    public boolean isValid() {
      return criteria.size() > 0;
    }

    public List<Criterion> getAllCriteria() {
      return criteria;
    }

    public List<Criterion> getCriteria() {
      return criteria;
    }

    protected void addCriterion(String condition) {
      if (condition == null) {
        throw new RuntimeException("Value for condition cannot be null");
      }
      criteria.add(new Criterion(condition));
    }

    protected void addCriterion(String condition, Object value, String property) {
      if (value == null) {
        throw new RuntimeException("Value for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value));
    }

    protected void addCriterion(String condition, Object value1, Object value2, String property) {
      if (value1 == null || value2 == null) {
        throw new RuntimeException("Between values for " + property + " cannot be null");
      }
      criteria.add(new Criterion(condition, value1, value2));
    }

    public Criteria andUserIdIsNull() {
      addCriterion("user_id is null");
      return (Criteria) this;
    }

    public Criteria andUserIdIsNotNull() {
      addCriterion("user_id is not null");
      return (Criteria) this;
    }

    public Criteria andUserIdEqualTo(Long value) {
      addCriterion("user_id =", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotEqualTo(Long value) {
      addCriterion("user_id <>", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThan(Long value) {
      addCriterion("user_id >", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
      addCriterion("user_id >=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThan(Long value) {
      addCriterion("user_id <", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdLessThanOrEqualTo(Long value) {
      addCriterion("user_id <=", value, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdIn(List<Long> values) {
      addCriterion("user_id in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotIn(List<Long> values) {
      addCriterion("user_id not in", values, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdBetween(Long value1, Long value2) {
      addCriterion("user_id between", value1, value2, "userId");
      return (Criteria) this;
    }

    public Criteria andUserIdNotBetween(Long value1, Long value2) {
      addCriterion("user_id not between", value1, value2, "userId");
      return (Criteria) this;
    }

    public Criteria andGrpIdIsNull() {
      addCriterion("grp_id is null");
      return (Criteria) this;
    }

    public Criteria andGrpIdIsNotNull() {
      addCriterion("grp_id is not null");
      return (Criteria) this;
    }

    public Criteria andGrpIdEqualTo(Integer value) {
      addCriterion("grp_id =", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdNotEqualTo(Integer value) {
      addCriterion("grp_id <>", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdGreaterThan(Integer value) {
      addCriterion("grp_id >", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdGreaterThanOrEqualTo(Integer value) {
      addCriterion("grp_id >=", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdLessThan(Integer value) {
      addCriterion("grp_id <", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdLessThanOrEqualTo(Integer value) {
      addCriterion("grp_id <=", value, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdIn(List<Integer> values) {
      addCriterion("grp_id in", values, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdNotIn(List<Integer> values) {
      addCriterion("grp_id not in", values, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdBetween(Integer value1, Integer value2) {
      addCriterion("grp_id between", value1, value2, "grpId");
      return (Criteria) this;
    }

    public Criteria andGrpIdNotBetween(Integer value1, Integer value2) {
      addCriterion("grp_id not between", value1, value2, "grpId");
      return (Criteria) this;
    }

    public Criteria andTypeIsNull() {
      addCriterion("type is null");
      return (Criteria) this;
    }

    public Criteria andTypeIsNotNull() {
      addCriterion("type is not null");
      return (Criteria) this;
    }

    public Criteria andTypeEqualTo(Byte value) {
      addCriterion("type =", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeNotEqualTo(Byte value) {
      addCriterion("type <>", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThan(Byte value) {
      addCriterion("type >", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeGreaterThanOrEqualTo(Byte value) {
      addCriterion("type >=", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeLessThan(Byte value) {
      addCriterion("type <", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeLessThanOrEqualTo(Byte value) {
      addCriterion("type <=", value, "type");
      return (Criteria) this;
    }

    public Criteria andTypeIn(List<Byte> values) {
      addCriterion("type in", values, "type");
      return (Criteria) this;
    }

    public Criteria andTypeNotIn(List<Byte> values) {
      addCriterion("type not in", values, "type");
      return (Criteria) this;
    }

    public Criteria andTypeBetween(Byte value1, Byte value2) {
      addCriterion("type between", value1, value2, "type");
      return (Criteria) this;
    }

    public Criteria andTypeNotBetween(Byte value1, Byte value2) {
      addCriterion("type not between", value1, value2, "type");
      return (Criteria) this;
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user_grp
   *
   * @mbggenerated do_not_delete_during_merge Tue Sep 27 11:53:21 CST 2016
   */
  public static class Criteria extends GeneratedCriteria {

    protected Criteria() {
      super();
    }
  }

  /**
   * This class was generated by MyBatis Generator. This class corresponds to the database table
   * user_grp
   *
   * @mbggenerated Tue Sep 27 11:53:21 CST 2016
   */
  public static class Criterion {

    private String condition;

    private Object value;

    private Object secondValue;

    private boolean noValue;

    private boolean singleValue;

    private boolean betweenValue;

    private boolean listValue;

    private String typeHandler;

    public String getCondition() {
      return condition;
    }

    public Object getValue() {
      return value;
    }

    public Object getSecondValue() {
      return secondValue;
    }

    public boolean isNoValue() {
      return noValue;
    }

    public boolean isSingleValue() {
      return singleValue;
    }

    public boolean isBetweenValue() {
      return betweenValue;
    }

    public boolean isListValue() {
      return listValue;
    }

    public String getTypeHandler() {
      return typeHandler;
    }

    protected Criterion(String condition) {
      super();
      this.condition = condition;
      this.typeHandler = null;
      this.noValue = true;
    }

    protected Criterion(String condition, Object value, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.typeHandler = typeHandler;
      if (value instanceof List<?>) {
        this.listValue = true;
      } else {
        this.singleValue = true;
      }
    }

    protected Criterion(String condition, Object value) {
      this(condition, value, null);
    }

    protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
      super();
      this.condition = condition;
      this.value = value;
      this.secondValue = secondValue;
      this.typeHandler = typeHandler;
      this.betweenValue = true;
    }

    protected Criterion(String condition, Object value, Object secondValue) {
      this(condition, value, secondValue, null);
    }
  }
}
