common.parameter.empty={0} is empty!
common.parameter.two.empty={0},{1} can not be empty at the same time!
common.parameter.wrong={0} Error!
common.entity.status.isone={1} entity status with ID of {0} is set as 1.
common.entity.notfound={1} entity with ID of {0} is not found.
common.entity.code.notfound={1} entity with code of {0} is not found.
common.entity.code.duplicate={1} entity with code of {0} is repetitive.
common.parameter.status.invalid=The status value must be 0 or 1.
common.entity.not.found=Cannot find data:{0}:{1}.
common.parameter.ids.invalid= {0} you enter is an invalid value.
common.parameter.tenancyidentity.required=Tenancy code or tenancy id is required
common.profile.parameter.user.identity.not.found=Can not find one user by {0}={1}.

group.parameter.delgroup=Please remove subgroups from this group first.
group.parameter.code=The group code: {0} you enter is in conflict with other groups.
group.parameter.code.id.dif= The group code {0} you enter and the group id {1} are binary errors.
group.parameter.name=Identical group name {0} has existed in this layer; please avoid the creation of groups with the same name in the same layer.
group.checkowner.not.owner=Current user {0} is not the owner of target group ID{1}.
group.rootgrp.unmodifiable=Root group is unmodifiable.
group.parameter.targetid.equals.sourceid=Target id can not equals to source id.

user.parameter.email.invalid=The email: {0} you enter has an incorrect format.
user.parameter.email.dup=The email: {0} you enter has already existed.
user.parameter.phone.invalid=The phone: {0} you enter has an incorrect format.
user.parameter.phone.dup=The phone: {0} you enter has already existed.
user.parameter.password.rule=Length of password must between 8 and 20 digits, including figures, upper and lower case letters, and characters.
user.parameter.password.duplicate=Could not set password that has been set during the past {0} months
user.login.notfound={0} user not found
user.login.multiuser.found=Multiple users are found in line with E-mail or phone No..
user.login.account.lock=Wrong password has been entered too many times and your account has been locked; please contact the administrator to unlock it.
user.login.error=UserID or password you enter is wrong.
user.login.newuser=You are a new user, please change your password first.
user.login.password.usetoolong=Your password has been used for more than {0} month(s), please change it before login. 
user.login.status.lock=Lock State of User

# multiple data authentication
login.multiple.data.user.authentication.not.supported=this type of account is not supported.
# domain
domain.techops.code.unmodifiable=Techops's Code is unmodifiable.

#data filter about
datafilter.typeparase.null.poniter=Null pointer for type change is abnormal, on {0}
datafilter.typeparase.parase.error= Data filtering; it is abnormal for {0} to be changed into {1} type.
datafilter.data.exsit.error={0} with {1} of {2} has already existed.
datafilter.data.notexsit.error={0} with {1} of {2} does not exist.
datafilter.data.mutilcondition.exsit.error =Data of {1} has already existed in {0}.
datafilter.data.mutilcondition.notexsit.error = Data of {1} do not exist in {0}.

common.parameter.origin.password.wrong=Wrong Original Password
#data filter about

#IPA
user.info.load.ipa.account=[{0}] might be a IPA account, you might goto IPA System for modifying information.

tagtype.delete.linked-tag.error=The tagType you'd like to remove has been linked to some tags at the state of "Enabled"; thus, please disable these tags before removal. 

data.query.result.number.exceed=Error: The maximum number of enquiry returned values supported by Uniauth is {0}. According to your query conditions, {1} article of datum is found out; please customize data paging conditions in line with your demands, or, enter the precise query condition, to reduce returned data.

# data filter table name
data.filter.table.name.cfg=cfg info
data.filter.table.name.domain=domain info
data.filter.table.name.group=group info
data.filter.table.name.permission=permission info
data.filter.table.name.role=role info
data.filter.table.name.tag=tag info
data.filter.table.name.tenancy=tenancy info
data.filter.table.name.tagtype=tagtype info
data.filter.table.name.user=user info
data.filter.table.name.userextend=userextend info
data.filter.table.name.userextendval=userextend value info
data.filter.table.name.grpextendval=grpextend value info
data.filter.table.name.profiledefinition=Profile value info

# new tenancy
tenancy.new.root.grp={0} Root grp
tenancy.new.super.admin.grp=Techops Super Administrators group
tenancy.new.super.admin.grp.des=Members within the group have top privileges for the Techops system
tenancy.new.super.admin.role=Techops super administrator role
tenancy.new.super.admin.role.des=Techops super administrator role
tenancy.new.super.admin.permission.des=With this permission, you can do anything in Techops

# profile
profile.check.circle.profile.relate=Profile:{0} and Profile sets: {1} has a loop Association.